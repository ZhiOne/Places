{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Card.js","shared/context/auth-context.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","Card","style","children","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","logoutTimer","Avatar","src","image","alt","width","height","UserItem","id","process","REACT_APP_ASSET_URL","name","placeCount","UsersList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","REACT_APP_BACKEND_URL","users","fetchUsers","MainHeader","NavLinks","auth","useContext","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","NewPlace","React","lazy","UpdatePlace","UserPlaces","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.0e27e77b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users'\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, {Suspense} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from \"./user/pages/Users\";\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport {AuthContext} from './shared/context/auth-context';\nimport {useAuth} from './shared/hooks/auth-hook';\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const {token, login, logout, userId} = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users/>\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces/>\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace/>\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace/>\n        </Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users/>\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces/>\n        </Route>\n        <Route path=\"/auth\">\n          <Auth/>\n        </Route>\n        <Redirect to=\"/auth\"/>\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation/>\n        <main>\n          <Suspense fallback={<div className=\"center\"><LoadingSpinner/></div>}>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}